#!/bin/bash

# Definitions for the [endeavouros] repo at 'mirrors'.

# Note: this file will be sourced into a function,
# so all variables are made 'local'.

local REPONAME="endeavouros"
local RELEASE_TAGS=(mirror1 mirror2)

# user to sign packages
local SIGNER="EndeavourOS"

# general options
local USE_GENERATED_FILELIST="no"                   # may generate 'repofiles.txt' into the repo

# local folders
local ASSETSDIR="$PWD"
local PKGBUILD_ROOTDIR="$ASSETSDIR/PKGBUILDS"       # temporary copy only, will always be overwritten
local GITDIR="$ASSETSDIR/../../mirrors"             # not $REPONAME...

# package name specifications
local PKGNAMES=(                                    # actually: dir names for packages
    aur/arc-x-icons-theme
#    aur/ckbcomp           moved to another repo
    aur/downgrade
    aur/inxi
    aur/mkinitcpio-openswap
    aur/paper-icon-theme
    aur/yay
    endeavouros-keyring
    endeavouros-mirrorlist
    endeavouros-theming
    eos-base
    eos-update-notifier
    grub-theme-endeavouros
    grub-tools
    nvidia-installer-db
    nvidia-installer
    nvidia-installer-dkms
    pahis
    reflector-auto
    reflector-simple
    welcome
)

# Hook functions are run in the beginning after RationalityTests in assets.make.
# There may be several hook functions.
local ASSET_HOOKS=(
    # currently none
)

# Package hooks

# do this for: icon-themes?

_yay_hook_check_latest() {
    # check if AUR PKGBUILD has the latest version of yay from the developer
    local tool=yay
    local url=https://github.com/Jguer/$tool/releases
    local tmpfile=$(mktemp)
    local Pkgbuild="$PKGBUILD_ROOTDIR"/$tool/PKGBUILD
    local localversion=$(grep ^pkgver= "$Pkgbuild" | cut -d '=' -f 2)
    local dev_version

    wget -q --timeout=10 -O $tmpfile $url || {
        echo "cannot fetch info about $tool" >&2
        rm -f $tmpfile
        return 1
    }
    #dev_version="$(grep "Release v[0-9]" $tmpfile | sed 's|^.*Release v\([0-9\.]*\).*$|\1|')"
    dev_version="$(grep /Jguer/yay/tree/v $tmpfile | head -n 1 | sed 's|^.*/tree/v\([0-9\.]*\)" .*$|\1|')"

    if [ "$localversion" != "$dev_version" ] ; then
        echo "$tool: local='$localversion' net='$dev_version'" >&2
    fi
    rm -f $tmpfile
}

_inxi_hook_check_latest() {
    # check if AUR PKGBUILD has the latest version of inxi from the developer
    local tool=inxi
    local url=https://github.com/smxi/$tool/releases
    local tmpfile=$(mktemp)
    local Pkgbuild="$PKGBUILD_ROOTDIR"/$tool/PKGBUILD
    local localversion=$(grep ^pkgver= "$Pkgbuild" | cut -d '=' -f 2)
    local dev_version

    wget -q --timeout=10 -O $tmpfile $url || {
        echo "cannot fetch info about $tool" >&2
        rm -f $tmpfile
        return 1
    }
    dev_version="$(grep /smxi/inxi/releases/tag/ $tmpfile | head -n 1 | sed 's|^.*/tag/\([0-9\.]*\)-.*$|\1|')"

    if [ "$localversion" != "$dev_version" ] ; then
        echo "$tool: local='$localversion' net='$dev_version'" >&2
    fi
    rm -f $tmpfile
}

_downgrade_hook_check_latest() {
    # check if AUR PKGBUILD has the latest version of downgrade from the developer
    local tool=downgrade
    local url=https://github.com/pbrisbin/$tool/releases
    local tmpfile=$(mktemp)
    local Pkgbuild="$PKGBUILD_ROOTDIR"/$tool/PKGBUILD
    local localversion=$(grep ^pkgver= "$Pkgbuild" | cut -d '=' -f 2)
    local dev_version

    wget -q --timeout=10 -O $tmpfile $url || {
        echo "cannot fetch info about $tool" >&2
        rm -f $tmpfile
        return 1
    }
    dev_version="$(grep /pbrisbin/downgrade/releases/tag/v $tmpfile | head -n 1 | sed 's|^.*/tag/v\([0-9\.]*\).*$|\1|')"

    if [ "$localversion" != "$dev_version" ] ; then
        echo "$tool: local='$localversion' net='$dev_version'" >&2
    fi
    rm -f $tmpfile
}

_ckbcomp_hook_change_version() {
    # change "$url" http to https
    sed -i "$PKGBUILD_ROOTDIR"/ckbcomp/PKGBUILD \
        -e 's|^url="http:|url="https:|'
}

_kalu_hook_fix_files() {
    # fix kalu.install
    sed -i "$PKGBUILD_ROOTDIR"/kalu/kalu.install \
        -e 's| usr/sbin/|/usr/sbin/|'

    # use names instead of numbers in "chown" command
    sed -i "$PKGBUILD_ROOTDIR"/kalu/PKGBUILD \
        -e 's|chown 0:102|chown root:polkitd|' \
        -e 's|^\(pkgrel=[0-9]*\)$|\1.1|'
}
_yad_hook_add_gspell() {
    # add gspell to 'depends', and modify 'pkgver'
    sed -i "$PKGBUILD_ROOTDIR"/yad/PKGBUILD \
        -e 's|^depends=(\([^\)]*\))$|depends=(\1 gspell)|' \
        -e 's|^\(pkgrel=[0-9]*\)$|\1.1|'
}

_welcome_hook_check_ksetwallpaper_py() {
    # Check if we have the latest version of file ksetwallpaper.py.
    # See https://github.com/pashazz/ksetwallpaper/raw/master/ksetwallpaper.py

    local file=ksetwallpaper.py
    local url="https://github.com/pashazz/ksetwallpaper/raw/master/$file"
    local current="$PKGBUILD_ROOTDIR"/welcome/$file
    local new=$file.latest
    local diffs answer

    wget -q --timeout=10 -O $new "$url" || {
        echo "Warning: cannot fetch '$url'." >&2
        return 1
    }
    diffs="$(diff "$current" "$new")"
    if [ -n "$diffs" ] ; then
        echo "" >&2
        echo "$diffs" >&2
        echo "" >&2
        read -p "welcome: file '$file' differs from current, update (Y/n)? " answer >&2
        case "$answer" in
            "" | [yY]*)
                rm -f $current
                mv $new $current
                pushd "$(dirname "$current")" >/dev/null
                updpkgsums 2>/dev/null
                popd >/dev/null
                ;;
        esac
    fi
    rm -f "$new"
}

declare -A ASSET_PACKAGE_HOOKS
#ASSET_PACKAGE_HOOKS["ckbcomp"]=_ckbcomp_hook_change_version
ASSET_PACKAGE_HOOKS["downgrade"]=_downgrade_hook_check_latest
ASSET_PACKAGE_HOOKS["inxi"]=_inxi_hook_check_latest
ASSET_PACKAGE_HOOKS["kalu"]=_kalu_hook_fix_files
ASSET_PACKAGE_HOOKS["welcome"]=_welcome_hook_check_ksetwallpaper_py
ASSET_PACKAGE_HOOKS["yad"]=_yad_hook_add_gspell
ASSET_PACKAGE_HOOKS["yay"]=_yay_hook_check_latest

# Special hooks. Implemented via package hooks.

_assets_download_break() {
    return 0  # same contents under different asset tags, so always break after first download
}
ASSET_PACKAGE_HOOKS["assets_mirrors"]=_assets_download_break
